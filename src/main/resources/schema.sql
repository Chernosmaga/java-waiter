DROP TABLE IF EXISTS employee;
DROP TABLE IF EXISTS orders;
DROP TABLE IF EXISTS dish;
DROP TABLE IF EXISTS tips_qr;
DROP TABLE IF EXISTS dishes;
DROP TABLE IF EXISTS status;

CREATE TABLE IF NOT EXISTS employee (
employee_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
phone VARCHAR(11) NOT NULL UNIQUE,
first_name VARCHAR NOT NULL,
surname VARCHAR NOT NULL,
user_password VARCHAR NOT NULL,
is_admin BOOL NOT NULL,
order_id INTEGER NOT NULL REFERENCES orders (order_id) ON DELETE CASCADE,
shift_start_time DATE NOT NULL,
shift_end_time DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS orders (
order_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
guests INTEGER NOT NULL,
employee_id INTEGER NOT NULL REFERENCES employee (employee_id) ON DELETE CASCADE,
status_id INTEGER NOT NULL REFERENCES status (status_id) ON DELETE CASCADE,
creation_time DATE NOT NULL,
bill_time DATE NOT NULL,
total REAL NOT NULL
);

CREATE TABLE IF NOT EXISTS dish (
dish_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
title VARCHAR NOT NULL UNIQUE,
is_available BOOL NOT NULL,
quantity INTEGER,
status_id INTEGER NOT NULL REFERENCES status (status_id) ON DELETE CASCADE,
price REAL,
comments VARCHAR
);

CREATE TABLE IF NOT EXISTS tips_qr (
employee_id INTEGER NOT NULL REFERENCES employee (employee_id) ON DELETE CASCADE,
qr_code VARCHAR NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS dishes (
dish_id INTEGER NOT NULL REFERENCES dish (dish_id) ON DELETE CASCADE,
order_id INTEGER NOT NULL REFERENCES orders (order_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS status (
status_id INTEGER NOT NULL REFERENCES dish (status_id) REFERENCES orders (status_id) ON DELETE CASCADE,
status_name VARCHAR UNIQUE
);